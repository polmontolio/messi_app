<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>